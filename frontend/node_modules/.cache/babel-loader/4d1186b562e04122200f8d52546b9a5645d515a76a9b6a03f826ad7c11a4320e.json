{"ast":null,"code":"var _jsxFileName = \"/Users/greg/Documents/Learning React/SPA-react-router/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage.js';\nimport { EventPage } from './pages/EventPage.js';\nimport { EventDetailPage } from './pages/EventDetailPage.js';\nimport { NewEventPage } from './pages/NewEventPage.js';\nimport { EditEventPage } from './pages/EditEventPage.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  end,\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this),\n  children: [{\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }, this)\n  }, {\n    path: '/events/:eventId',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 42\n    }, this)\n  }, {\n    path: '/events/new',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }, this)\n  }, {\n    path: '/events/:eventId/edit',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 47\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventPage","EventDetailPage","NewEventPage","EditEventPage","jsxDEV","_jsxDEV","router","path","end","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["/Users/greg/Documents/Learning React/SPA-react-router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom';\nimport {HomePage} from './pages/HomePage.js';\nimport {EventPage} from './pages/EventPage.js';\nimport {EventDetailPage} from './pages/EventDetailPage.js';\nimport {NewEventPage} from './pages/NewEventPage.js';\nimport {EditEventPage} from './pages/EditEventPage.js';\n\nconst router = createBrowserRouter([{\n  path: '/',\n  end,\n  element: <HomePage />,\n  children: [\n    { path: '/events', element: <EventPage /> },\n    { path: '/events/:eventId', element: <EventDetailPage /> },\n    { path: '/events/new', element: <NewEventPage /> },\n    { path: '/events/:eventId/edit', element: <EditEventPage /> },\n  ]\n}]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,SAAQC,QAAQ,QAAO,qBAAqB;AAC5C,SAAQC,SAAS,QAAO,sBAAsB;AAC9C,SAAQC,eAAe,QAAO,4BAA4B;AAC1D,SAAQC,YAAY,QAAO,yBAAyB;AACpD,SAAQC,aAAa,QAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CAAC;EAClCU,IAAI,EAAE,GAAG;EACTC,GAAG;EACHC,OAAO,eAAEJ,OAAA,CAACN,QAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACrBC,QAAQ,EAAE,CACR;IAAEP,IAAI,EAAE,SAAS;IAAEE,OAAO,eAAEJ,OAAA,CAACL,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC3C;IAAEN,IAAI,EAAE,kBAAkB;IAAEE,OAAO,eAAEJ,OAAA,CAACJ,eAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC1D;IAAEN,IAAI,EAAE,aAAa;IAAEE,OAAO,eAAEJ,OAAA,CAACH,YAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAClD;IAAEN,IAAI,EAAE,uBAAuB;IAAEE,OAAO,eAAEJ,OAAA,CAACF,aAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AAEjE,CAAC,CAAC,CAAC;AAEH,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACP,cAAc;IAACQ,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACG,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}